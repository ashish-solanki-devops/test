name: Deploy to EC2

on:
  push:
    branches:
      - main  # Adjust if you want to deploy from a different branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Build the project
      run: npm run build  # Adjust if you have a build step

    - name: Add SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.AWS_PEM_FILE }}" > ~/.ssh/aws_key.pem
        chmod 600 ~/.ssh/aws_key.pem

    - name: Deploy to Server 1
      env:
        EC2_USER: ${{ secrets.EC2_USER }}
        EC2_HOST: ${{ secrets.EC2_HOST1 }}
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/aws_key.pem $EC2_USER@$EC2_HOST << EOF
          cd /var/www/your-node-app || { echo "Directory not found, creating it"; mkdir -p /var/www/your-node-app; cd /var/www/your-node-app; }
          if [ -d ".git" ]; then
            git pull origin main
          else
            git clone https://github.com/yourusername/yourrepo.git .
          fi
          npm install
          pm2 stop your-node-app || true
          pm2 start app.js --name your-node-app
          pm2 save
          pm2 startup
        EOF

    - name: Deploy to Server 2
      env:
        EC2_USER: ${{ secrets.EC2_USER }}
        EC2_HOST: ${{ secrets.EC2_HOST2 }}
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/aws_key.pem $EC2_USER@$EC2_HOST << EOF
          cd /var/www/your-node-app || { echo "Directory not found, creating it"; mkdir -p /var/www/your-node-app; cd /var/www/your-node-app; }
          if [ -d ".git" ]; then
            git pull origin main
          else
            git clone https://github.com/yourusername/yourrepo.git .
          fi
          npm install
          pm2 stop your-node-app || true
          pm2 start app.js --name your-node-app
          pm2 save
          pm2 startup
        EOF
